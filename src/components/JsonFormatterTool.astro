<div class="bg-neutral-800 p-6 rounded-lg shadow-lg border border-neutral-700">
  <h3 class="text-xl font-semibold text-white mb-3">
    JSON Formatter & Validator
  </h3>
  <p class="text-neutral-400 text-sm mb-4">
    Paste your JSON below to format it and check for validity.
  </p>

  <div class="space-y-4">
    <div>
      <label
        for="jsonInput"
        class="block text-sm font-medium text-neutral-300 mb-1"
        >JSON Input:</label
      >
      <textarea
        id="jsonInput"
        rows="8"
        class="block w-full bg-neutral-700 border-transparent rounded-md p-3 text-white placeholder-neutral-500 focus:ring-[#ff0] focus:border-[#ff0] sm:text-sm font-mono"
        placeholder='{"name": "Astro", "isAwesome": true, "features": ["Islands", "SSR"]}'
        spellcheck="false"></textarea>
      <div id="validationStatus" class="mt-1 text-xs"></div>
    </div>

    <div class="flex flex-wrap gap-2">
      <button
        id="formatJsonBtn"
        class="py-2 px-4 bg-[#ff0] text-neutral-900 font-medium rounded-md text-sm hover:bg-yellow-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-neutral-800 focus:ring-[#ff0]"
      >
        Format JSON
      </button>
      <button
        id="clearJsonBtn"
        class="py-2 px-4 bg-neutral-600 text-white font-medium rounded-md text-sm hover:bg-neutral-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-neutral-800 focus:ring-neutral-500"
      >
        Clear
      </button>
    </div>

    <div>
      <label
        for="jsonOutput"
        class="block text-sm font-medium text-neutral-300 mb-1"
        >Formatted Output:</label
      >
      <textarea
        id="jsonOutput"
        rows="10"
        readonly
        class="block w-full bg-neutral-700 border-transparent rounded-md p-3 text-white placeholder-neutral-500 sm:text-sm font-mono cursor-not-allowed"
        placeholder="Formatted JSON will appear here..."
        spellcheck="false"></textarea>
      <button
        id="copyJsonOutputBtn"
        class="mt-2 py-1 px-3 bg-neutral-600 text-white font-medium rounded-md text-xs hover:bg-neutral-500 focus:outline-none focus:ring-1 focus:ring-offset-1 focus:ring-offset-neutral-800 focus:ring-neutral-500"
      >
        Copy Output
      </button>
    </div>
  </div>
</div>

<script>
  const jsonInput = document.getElementById("jsonInput") as HTMLTextAreaElement;
  const jsonOutput = document.getElementById(
    "jsonOutput"
  ) as HTMLTextAreaElement;
  const formatJsonBtn = document.getElementById("formatJsonBtn");
  const clearJsonBtn = document.getElementById("clearJsonBtn");
  const copyJsonOutputBtn = document.getElementById("copyJsonOutputBtn");
  const validationStatus = document.getElementById("validationStatus");

  const updateValidationStatus = (message: string, isError: boolean) => {
    if (validationStatus) {
      validationStatus.textContent = message;
      validationStatus.className = `mt-5 text-xs ${isError ? "text-red-400" : "text-green-400"}`;
    }
  };

  formatJsonBtn?.addEventListener("click", () => {
    const rawJson = jsonInput.value.trim();
    if (!rawJson) {
      jsonOutput.value = "";
      updateValidationStatus("Input is empty", false);
      return;
    }

    try {
      const parsedJson = JSON.parse(rawJson);
      jsonOutput.value = JSON.stringify(parsedJson, null, 2);
      updateValidationStatus("JSON in valid", false);
    } catch (e: any) {
      jsonOutput.value = "Invalid JSON input";

      let errorMessage = "Invalid JSON: ";
      if (e instanceof SyntaxError) {
        errorMessage += e.message;
      } else {
        errorMessage += "Unknown error occured";
      }
      updateValidationStatus(errorMessage, true);
      console.error("JSON parsing error: ", e);
    }
  });

  copyJsonOutputBtn?.addEventListener("click", () => {
    if (jsonOutput && jsonOutput.value != "Invalid JSON input") {
      navigator.clipboard
        .writeText(jsonOutput.value)
        .then(() => {
          copyJsonOutputBtn.textContent = "Copied";
          setTimeout(() => {
            copyJsonOutputBtn.textContent = "Copy Output";
          }, 1500);
        })
        .catch((err) => {
          console.error("Failed to copy JSON: ", err);
          alert("Failed to copy JSON");
        });
    }
  });
</script>
